METHOD-1
TC=O(3N/2)
SC=O(1)

class Solution{
    public:
    /* Should return data of middle node. If linked list is empty, then  -1*/
    int getMiddle(Node *head)
    {
        int count=0;
        Node* current=head;
        while(current!=NULL)
        {
            count++;
            current=current->next;
        }
        int midlen=count/2;
        Node* mid=head;
        while(midlen)
        {
            mid=mid->next;
            midlen--;
        }
        return mid->data;
    }
};



METHOD-2
TC=O(N/2)
SC=O(1)


class Solution{
    public:
    /* Should return data of middle node. If linked list is empty, then  -1*/
    int getMiddle(Node *head)
    {
        Node* slow=head;
        Node* fast=head;
        while(fast && fast->next)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow->data;
    }
};
